---
title: 'Neo4j.rb: (ruby)-[:LOVES]-(neo4j)'

---
  javascript:
    ((window.gitter = {}).chat = {}).options = {
      room: 'neo4jrb/neo4j'
    };

  script src="https://sidecar.gitter.im/dist/sidecar.v1.js" async defer

  div style='display: none;'
    |'fixes sublimetext color bug, ignore
  #content.col-sm-8
    .panel
      .panel-heading
        h3 What is Neo4j.rb?
      .panel-body
        p
          markdown:
            The Neo4j.rb project is made up of the follow [Ruby](https://www.ruby-lang.org/en/) gems:

             * [neo4j](https://github.com/neo4jrb/neo4j) A Object-Graph-Mapper (OGM) for the [Neo4j](http://neo4j.com) graph database. It tries to follow API conventions established by [ActiveRecord](http://guides.rubyonrails.org/active_record_basics.html) and familiar to most Ruby developers but with a Neo4j flavor.
             * [neo4j-core](https://github.com/neo4jrb/neo4j-core) A low level driver for connecting to Neo4j.  Used by the `neo4j` gem.
             * [neo4j-rake_tasks](https://github.com/neo4jrb/neo4j-rake_tasks)) A set of rake tasks for installing and managing a Neo4j database within your project.  Used by the `neo4j-core` gem.

        dl.dl-horizontal
          dt Ruby
          dd
            markdown:
              (*software*) A dynamic, open source programming language with a focus on simplicity and productivity. It has an elegant syntax that is natural to read and easy to write.

          dt
            | Graph
            br
            | Database
          dd
            markdown:
              (*computer science*) A graph database stores data in a graph, the most generic of data structures, capable of elegantly representing any kind of data in a highly accessible way.

          dt Neo4j
          dd
            markdown:
              (*databases*) The world's leading graph database


        p
          | If you're already familiar with ActiveRecord, DataMapper, or Mongoid, you'll find the Object Model features you've come to expect from an O*M:
          ul
            li Properties
            li Indexes / Constraints
            li Callbacks
            li Validation
            li Assocations
          | Because relationships are first-class citizens in Neo4j, models can be created for both nodes and relationships.
        p
          h4 Additional features include
          ul
            li A chainable #{link_to "arel", "https://github.com/rails/arel"}-inspired query builder
            li Transactions
            li Migration framework

        p
          h4 Requirements
          ul
            li Ruby 2.0.0+ (tested in MRI and JRuby, MRI 2.2.1+ recommended)
            li Neo4j 2.1.5+ (version 4.0+ of the gem is required to use neo4j 2.2+)

    #latest-news.panel
      .panel-heading
        h3 Latest News
      .panel-body
        - if blog.articles.empty?
          | There are no posts at this time.
        - else
          - blog.articles[0...6].each do |article|
            .article-teaser
              .title #{link_to article.title, article} (#{article.date.strftime("%Y/%m/%d")})
              .body
                = article.data.summary
        = link_to "News Archive", '/blog/'

    #getting-started.panel
      .panel-heading
        h3 Get started
      .panel-body

        .row
          .col-sm-6
            h4 Ruby
            p
              | New to Ruby? #{link_to 'Try Ruby in your browser!', 'http://tryruby.org/levels/1/challenges/0'}
            p
              | Installation resources:
              ul
                li Mac: #{link_to 'Getting started', 'http://railsapps.github.io/installrubyonrails-mac.html'}
                li Windows: #{link_to 'Rails installer', 'http://railsinstaller.org/en'}

          .col-sm-6
            h4 Neo4j
            p
              | New to Neo4j? #{link_to 'Try Neo4j in your browser!', 'http://console.neo4j.org/'}
            p
              | Installation resources:
              ul
                li
                  markdown: Mac: `brew install neo4j` / `neo4j start`
                li All Platforms: #{link_to 'Download Neo4j', 'http://neo4j.com/download/'}

        h4 Introduction screencast

        iframe width="560" height="315" src="https://www.youtube.com/embed/n0P0pOP34Mw?rel=0" frameborder="0" allowfullscreen

        h4 Ruby Rogues interview

        p Brian Underwood, one of the maintainers of the Neo4j.rb project, recently gave an interview with the Ruby Rogues.  See <a href="https://devchat.tv/ruby-rogues/236-rr-neo4j-with-brian-underwood">episode #236</a>.

        h4 Modeling
        p
          markdown:
            In your `Gemfile`

            ```ruby
              gem 'neo4j'
            ```

            A sample ActiveNode model

            ```ruby
             class User
                include Neo4j::ActiveNode

                property :name
                property :age, type: Integer

                has_many :out, :friends, type: :friends_with, model_name: 'User'
                has_one :in,   :github_profile, type: :linked_to  # model_name: 'GithubProfile' assumed
              end
            ```

            Using query chaining to get the github profiles for a user's friends

            ```ruby
              user.friends.github_profile
            ```


        p
          | If you're the sort who likes to watch a video, check out our intro #{link_to 'screencast', 'https://www.youtube.com/watch?v=bDjbqRL9HcM'}.
          br
          | If you like to read, check out our documentation's #{link_to 'setup page', 'http://neo4jrb.readthedocs.org/en/stable/Setup.html'}.

        h4 Simple queries
        p
          markdown:
            If you just want to execute some raw cypher queries you only need the `neo4j-core` gem.

            ```ruby
              neo4j_session = Neo4j::Session.open(:server_db, ENV['NEO4J_DB_URL'])

              me = neo4j_session.query('MATCH (found:User) WHERE found.name = {aName} RETURN found',
                                       aName: 'Andreas').first.found
            ```

            There is also a query-building API which allows you to build cypher queries with method chaining:

            ```ruby
              user = neo4j_session.query.match(found: :User).
                                          where(found: {name: 'Andreas'}).
                                          return(:user).
                                          first.found
            ```

            At each step in the chain a query object is returned which is also `Enumerable`.  See the [documentation](http://neo4jrb.readthedocs.org/en/stable/Querying.html) for more info.

            Also note that with the query chaining there is no need to use params (which are important for efficient neo4j queries).  They will be used in the background in this case.

        h4 Install in Ruby on Rails
        p
        markdown:
          In your `config/application.rb`

          ```ruby
            config.neo4j.session_type = :server_db
            config.neo4j.session_path = ENV['NEO4J_URL'] || 'http://localhost:7475'
          ```

          The url format is `http://user:password@localhost:7475`

    #getting-involved.panel
      .panel-heading
        h3 Getting involved
      .panel-body
        p
          | Like any open source project we happily welcome:
          ul
            li = link_to 'New Issue', 'https://github.com/neo4jrb/neo4j/issues/new', id: 'new-github-issue'
            li
              iframe src="http://ghbtns.com/github-btn.html?user=neo4jrb&repo=neo4j&type=fork" allowtransparency="true" frameborder="0" scrolling="0" width="53" height="20" style="position: relative; top: 4px"
              |  Start a pull request!
            li Improvements to our #{link_to 'documentation', 'http://neo4jrb.readthedocs.org/'}

        p
          | You can also join us on our #{link_to 'mailing list', 'https://groups.google.com/forum/#!forum/neo4jrb'}


    #getting-help.panel
      .panel-heading
        h3 Getting Help
      .panel-body
        p
          | Need help using the gem? Think you've found a bug? There are a few ways to get help.
          ul
            li #{link_to 'StackOverflow', 'http://stackoverflow.com/questions/tagged/neo4j+or+neo4jrb+or+neo4j.rb'}
            li #{link_to 'Github issues', 'https://github.com/neo4jrb/neo4j/issues'}
            li #{link_to 'Neo4j.rb', 'https://twitter.com/neo4jrb'} on Twitter

    #page-source.panel
      .panel-heading
        h3 Source code of this site
      .panel-body
        p
          | If you notice anything wrong with this page, feel free to submit a pull request on 
          = link_to 'the repository', 'https://github.com/neo4jrb/neo4jrb.github.io'

	.col-sm-1
